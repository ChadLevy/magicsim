compare[x_]:=StringContainsQ[x,":"]
getCrit[point_]:=Part[StringSplit[Part[point,1],":"],2]//ToExpression
getMastery[point_]:=Part[StringSplit[Part[point,2],":"],2]//ToExpression
getHaste[point_]:=Part[StringSplit[Part[point,3],":"],2]//ToExpression
getVers[point_]:=Part[StringSplit[Part[point,4],":"],2]//ToExpression
getDps[point_]:=Part[point,5]//ToExpression
getTotal[point_]:=getCrit[point]+getMastery[point]+getHaste[point]
analysis[points_]:=
{
max=First[Take[points,Ordering[getDps[#] &/@points,-1]]];
p1=ListPlot3D[{(getHaste[#]-getVers[#])/getTotal[#],(getMastery[#]-getCrit[#])/getTotal[#],getDps[#]} &/@points,PlotRange->All,ColorFunction->Function[{x,y,z},Hue[If[z>=.95,z,If[z>=.8,z*.7,z*.3]]]],PlotLabel->max,AxesLabel->{"Haste - Vers / Total","Crit - Mastery / Total","DPS"},ViewPoint->Top];
p2= Graphics3D[{Black, PointSize[0.05], Point[{(getHaste[max]-getVers[#])/getTotal[max],(getMastery[max]-getCrit[max])/getTotal[max], getDps[max]}]}];
Show[p1,p2]
}
processUrl[url_,talent_,model_]:=
(  
data=Import[url];
reforges=Merge[Part[StringSplit[Part[#,5],";"],1]->Join[Take[Part[Select[StringSplit[Part[StringSplit[#,";"],1],"\t"],compare],1]&/@#,4],{StringSplit[#,";"]//Last//Last}]&/@data,Join];
Text[talent+model]
Map[analysis,reforges]
)